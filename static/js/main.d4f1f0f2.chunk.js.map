{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","types/filterType.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","selectTodo","className","map","todo","cn","id","completed","title","type","onClick","TodoFilter","filterType","onFilter","inputValue","onInputChange","onAppliedInputChange","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","FilterType","TodoModal","onClose","useState","user","setUser","isLoading","setIsLoading","useEffect","userId","response","finally","href","email","name","App","setTodos","setSelectedTodo","All","setFilterType","setinputValue","appliedInputValue","setApliedInputValue","applyInputValue","useCallback","func","timerId","clearInterval","args","window","debounce","filteredTodos","useMemo","filter","checkInput","toLowerCase","includes","Active","Completed","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d4f1f0f2.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodo: Todo | null,\n  selectTodo: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  selectTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          key={todo.id}\n          data-cy=\"todo\"\n          className={cn({\n            'has-background-info-light': selectedTodo?.id === todo.id,\n          })}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={todo.completed\n              ? 'has-text-success'\n              : 'has-text-danger'}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => selectTodo(todo)}\n            >\n              <span className=\"icon\">\n                <i\n                  className={\n                    selectedTodo?.id !== todo.id\n                      ? 'far fa-eye'\n                      : 'far fa-eye-slash'\n                  }\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport { FilterType } from '../../types/filterType';\n\ntype Props = {\n  filterType: FilterType,\n  onFilter: (type: FilterType) => void,\n  inputValue: string,\n  onInputChange: (val: string) => void,\n  onAppliedInputChange: (val: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filterType,\n  onFilter,\n  inputValue,\n  onInputChange,\n  onAppliedInputChange,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={filterType}\n          onChange={(event) => {\n            const { value } = event.target;\n\n            onFilter(value as FilterType);\n          }}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={inputValue}\n        onChange={(event) => {\n          const { value } = event.target;\n\n          onInputChange(value);\n          onAppliedInputChange(value);\n        }}\n      />\n\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {inputValue && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => {\n              onInputChange('');\n              onAppliedInputChange('');\n            }}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum FilterType {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  selectedTodo: Todo,\n  onClose: (todo: null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ selectedTodo, onClose }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    getUser(selectedTodo.id)\n      .then(response => setUser(response))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onClose(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, {\n  useEffect, useState, useCallback, useMemo,\n} from 'react';\nimport './App.css';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { FilterType } from './types/filterType';\n\nconst debounce = (func: (arg: string) => void, delay = 300) => {\n  let timerId: number;\n\n  return (...args: string[]) => {\n    clearInterval(timerId);\n\n    timerId = window.setTimeout(func, delay, ...args);\n  };\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [filterType, setFilterType] = useState(FilterType.All);\n  const [inputValue, setinputValue] = useState('');\n  const [appliedInputValue, setApliedInputValue] = useState('');\n\n  useEffect(() => {\n    getTodos()\n      .then(response => setTodos(response))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const applyInputValue = useCallback(debounce(setApliedInputValue), []);\n\n  const filteredTodos = useMemo(() => {\n    return todos.filter(todo => {\n      const { title, completed } = todo;\n      const checkInput = title\n        .toLowerCase()\n        .includes(inputValue.toLowerCase());\n\n      switch (filterType) {\n        case FilterType.All:\n          return checkInput;\n        case FilterType.Active:\n          return checkInput && !completed;\n        case FilterType.Completed:\n          return checkInput && completed;\n        default:\n          return true;\n      }\n    });\n  }, [todos, appliedInputValue, filterType]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                inputValue={inputValue}\n                filterType={filterType}\n                onFilter={setFilterType}\n                onInputChange={setinputValue}\n                onAppliedInputChange={applyInputValue}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n              {!isLoading && (\n                <TodoList\n                  todos={filteredTodos}\n                  selectedTodo={selectedTodo}\n                  selectTodo={setSelectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          onClose={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}